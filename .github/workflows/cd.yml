name: Deploy Campus-Ease

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies for Frontend
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        env:
          API_URL: https://campusease.vinayaknagar.tech/api
        run: |
          cd frontend
          # Update API URLs before build
          find src -type f -name "*.js*" -exec sed -i 's|https://campus-ease-backend.onrender.com|https://campusease.vinayaknagar.tech/api|g' {} \;
          npm run build

      - name: Install dependencies for Admin
        run: |
          cd Admin
          npm install

      - name: Build Admin
        env:
          API_URL: https://campusease.vinayaknagar.tech/api
        run: |
          cd Admin
          # Update API URLs before build
          find src -type f -name "*.js*" -exec sed -i 's|https://campus-ease-backend.onrender.com|https://campusease.vinayaknagar.tech/api|g' {} \;
          npm run build

      - name: Install Backend dependencies
        run: |
          cd Backend
          npm install

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Modified approach using a third-party action that handles SSH more reliably
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: "54.81.119.40"
          username: "ubuntu"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            mkdir -p ~/Campus-Ease/frontend/dist ~/Campus-Ease/Admin/dist ~/Campus-Ease/Backend
            echo "Directories created successfully"

      # Use scp-action for file transfers
      - name: Copy Frontend Files
        uses: appleboy/scp-action@master
        with:
          host: "54.81.119.40"
          username: "ubuntu"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend/dist/*"
          target: "~/Campus-Ease/frontend"
          strip_components: 1
          overwrite: true

      - name: Copy Admin Files
        uses: appleboy/scp-action@master
        with:
          host: "54.81.119.40"
          username: "ubuntu"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "Admin/dist/*"
          target: "~/Campus-Ease/Admin"
          strip_components: 1
          overwrite: true

      - name: Copy Backend Files
        uses: appleboy/scp-action@master
        with:
          host: "54.81.119.40"
          username: "ubuntu"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "Backend/*"
          target: "~/Campus-Ease/Backend"
          overwrite: true

      - name: Run Deployment Script
        uses: appleboy/ssh-action@master
        with:
          host: "54.81.119.40"
          username: "ubuntu"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          envs: DATABASE_URL,JWT_SECRET
          environment:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
          script: |
            export DATABASE_URL='$DATABASE_URL'
            export JWT_SECRET='$JWT_SECRET'
            export DOMAIN_NAME='campusease.vinayaknagar.tech'
            cd ~/Campus-Ease
            
            # Create the deployment script if it doesn't exist
            cat > deploy.sh << 'EOL'
            #!/bin/bash
            set -e

            echo "Starting deployment process..."

            # Install required packages if not already installed
            if ! command -v npm &> /dev/null; then
              echo "Installing Node.js and npm..."
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt install -y nodejs
            fi

            if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2..."
              sudo npm install -g pm2
            fi

            if ! command -v nginx &> /dev/null; then
              echo "Installing nginx..."
              sudo apt update
              sudo apt install -y nginx
            fi

            # Create Backend .env file
            echo "Setting up environment variables..."
            cat > ~/Campus-Ease/Backend/.env << EOF
            DATABASE_URL=${DATABASE_URL}
            JWT_SECRET=${JWT_SECRET}
            EOF

            # Create uploads directory
            mkdir -p ~/Campus-Ease/Backend/uploads
            chmod 755 ~/Campus-Ease/Backend/uploads

            # Configure Nginx
            echo "Configuring Nginx..."
            sudo bash -c 'cat > /etc/nginx/sites-available/campusease << EOF
            server {
                listen 80;
                server_name campusease.vinayaknagar.tech;

                location / {
                    root /home/ubuntu/Campus-Ease/frontend/dist;
                    index index.html;
                    try_files \$uri \$uri/ /index.html;
                }

                location /admin {
                    alias /home/ubuntu/Campus-Ease/Admin/dist;
                    try_files \$uri \$uri/ /admin/index.html;
                }

                location /api {
                    proxy_pass http://localhost:4000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection "upgrade";
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }

                location /images {
                    alias /home/ubuntu/Campus-Ease/Backend/uploads;
                }
            }
            EOF'

            # Enable site
            sudo ln -sf /etc/nginx/sites-available/campusease /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            sudo nginx -t && sudo systemctl restart nginx

            # Install serve globally if needed
            sudo npm install -g serve

            # Start Backend with PM2
            echo "Starting backend with PM2..."
            cd ~/Campus-Ease/Backend
            npm install
            pm2 stop campusease-backend 2>/dev/null || true
            pm2 start server.js --name campusease-backend

            # Start frontend and admin
            echo "Starting frontend with PM2..."
            cd ~/Campus-Ease/frontend
            pm2 stop campusease-frontend 2>/dev/null || true
            pm2 start serve --name campusease-frontend -- -s dist -l 3000

            echo "Starting admin with PM2..."
            cd ~/Campus-Ease/Admin  
            pm2 stop campusease-admin 2>/dev/null || true
            pm2 start serve --name campusease-admin -- -s dist -l 3001

            # Save PM2 configuration
            pm2 save
            pm2 startup

            echo "Deployment completed successfully!"
            EOL
            
            # Make the deployment script executable and run it
            chmod +x deploy.sh
            ./deploy.sh