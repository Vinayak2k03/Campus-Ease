name: Deploy Campus-Ease

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies for Frontend
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        env:
          API_URL: https://${{ secrets.DOMAIN_NAME }}/api
        run: |
          cd frontend
          # Update API URLs before build
          find src -type f -name "*.js*" -exec sed -i 's|https://campus-ease-backend.onrender.com|https://${{ secrets.DOMAIN_NAME }}/api|g' {} \;
          npm run build

      - name: Install dependencies for Admin
        run: |
          cd Admin
          npm install

      - name: Build Admin
        env:
          API_URL: https://${{ secrets.DOMAIN_NAME }}/api
        run: |
          cd Admin
          # Update API URLs before build
          find src -type f -name "*.js*" -exec sed -i 's|https://campus-ease-backend.onrender.com|https://${{ secrets.DOMAIN_NAME }}/api|g' {} \;
          npm run build

      - name: Install Backend dependencies
        run: |
          cd Backend
          npm install

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Debug VM_HOST value
        run: |
          echo "VM_HOST value length: ${#VM_HOST}"
          # Print first few characters to check format without revealing full IP
          echo "VM_HOST starts with: ${VM_HOST:0:2}..."
        env:
          VM_HOST: ${{ secrets.VM_HOST }}

      - name: Setup known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "Running ssh-keyscan for ${{ secrets.VM_HOST }}"
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts || echo "Keyscan failed"
          cat ~/.ssh/known_hosts

      - name: Deploy to VM with direct IP
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
        run: |
          # Use the IP address directly
          echo "Testing SSH connection..."
          ssh -o StrictHostKeyChecking=accept-new ${{ secrets.SSH_USER }}@54.81.119.40 "echo SSH connection successful"
          
          echo "Creating directories..."
          ssh ${{ secrets.SSH_USER }}@54.81.119.40 "mkdir -p ~/Campus-Ease/frontend/dist ~/Campus-Ease/Admin/dist ~/Campus-Ease/Backend"
          
          echo "Copying frontend files..."
          scp -r frontend/dist/* ${{ secrets.SSH_USER }}@54.81.119.40:~/Campus-Ease/frontend/dist/
          
          echo "Copying admin files..."
          scp -r Admin/dist/* ${{ secrets.SSH_USER }}@54.81.119.40:~/Campus-Ease/Admin/dist/
          
          echo "Copying backend files..."
          scp -r Backend/* ${{ secrets.SSH_USER }}@54.81.119.40:~/Campus-Ease/Backend/
          
          echo "Executing deployment script..."
          ssh ${{ secrets.SSH_USER }}@54.81.119.40 "export DATABASE_URL='$DATABASE_URL' && export JWT_SECRET='$JWT_SECRET' && export DOMAIN_NAME='$DOMAIN_NAME' && cd ~/Campus-Ease && bash ./deploy.sh"